xml.div(:id=>'track',:class=>'section') do
  xml.h1() do
    xml.div({:class=>"color-code track-#{@track.conference_track.urlify}"}) do
      xml << "&nbsp;"
    end
    xml << @track.conference_track
  end
  xml.div({:id=>"event-track-cal"}) do
    xml.ul do
      xml.li do
        xml.a("ical",{:href=>"../"+url_for(:action=>:track_ical,:track=>@track.conference_track),:class=>"ical",:id=>"event-track-ical"})
      end
      xml.li do
        xml.a("xcal",{:href=>"../"+url_for(:action=>:track_xcal,:track=>@track.conference_track),:class=>"xcal",:id=>"event-track-xcal"})
      end
    end #ul
  end #div
  rooms = (@track_rooms[@track.conference_track_id] or [])
  if not (rooms.nil? or rooms.empty?) then
    xml.div({:id=>"track-rooms"}) do
      if rooms.count > 1 then
        xml.text! "Rooms: "
      else
        xml.text! "Room: "
      end
      first = true
      rooms.each do |r|
        xml.text! ", " unless first
        first = false
        xml.a(r.conference_room,{:href=>"../"+url_for(:action=>:room,:room=>r.conference_room)})
      end
    end
  end
  xml.table(:class=>'track-index') do
    xml.tbody do
      d = 0
      @track_events.sort_by {|e| e.start_time}.group_by {|e| e.start_datetime.to_date}.sort_by {|d,e| d}.each do |day,events|
        if d > 0 then
          xml.tr(:class=>'separator') do
            xml.td(:colspan=>4) do
            end
          end
        end
        d += 1

        xml.tr({:class=>'schedule-day'}) do
          xml.td(day.strftime('%A %F'), {:class=>'schedule-day-title', :colspan=>4})
          xml.tr do
            xml.th(local('schedule::event'),{:class=>'event'})
            xml.th(local('schedule::speaker'),{:class=>'speaker'})
            xml.th(local('schedule::room'),{:class=>'room'})
            xml.th('When', {:class=>'event-time'})
            #xml.th('Media', {:class=>'event-media'})
          end
        end #tr

        c = 0
        events.sort_by {|e| e.start_time}.each do |event|
          c += 1
          trclass = (c % 2 == 1) ? "even" : "odd"

          xml.tr(:class=>trclass) do
            xml.td(:class=>"event") do
              xml.a(event.title,{:href=>"../"+url_for(:action=>:event,:slug=>event.slug)})
            end
            xml.td(:class=>"event speaker") do
              first = true
              (@event_speakers[event.event_id] or []).each do |speaker|
                xml.text! ", " unless first
                first = false
                xml.a(speaker.name,{:href=>"../"+url_for(:action=>:speaker,:name=>speaker.name)})
              end
            end
            xml.td(:class=>"event room") do
              xml.a(event.conference_room,{:href=>"../"+url_for(:action=>:room,:room=>event.conference_room)})
            end
            xml.td(:class=>"event-timespec") do
              xml.text! "#{event.start_time.strftime('%H:%M')}-#{(event.start_time + event.duration).strftime('%H:%M')}"
            end
            if false then
              xml.td(:class=>"event-media") do
                View_event_media.find({:event_id => event.event_id}).each_unique(:event_media_id) do | m |
                  xml.a({:href=>m.event_media_url, :title=>m.label, :class=>"event-media-icon"}) do
                  xml.img(:src=>m.event_media_icon_url)
                  end
                end
              end
            end #false

          end
        end
      end
    end
  end
end
